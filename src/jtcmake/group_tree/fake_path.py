# Automatically generated by .gen_fake_path_code.py

from pathlib import Path
from typing import NoReturn


class FakePath(Path):
    def __new__(cls, *args: object, **kwargs: object):
        return object.__new__(cls)

    @property
    def parts(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def drive(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def root(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def anchor(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def name(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def suffix(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def suffixes(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def stem(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def parents(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @property
    def parent(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS PROPERTY. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __eq__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __fspath__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __lt__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __le__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __gt__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __ge__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __truediv__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __rtruediv__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __bytes__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def as_posix(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def as_uri(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_absolute(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_reserved(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_relative_to(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def match(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def relative_to(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def with_name(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def with_stem(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def with_suffix(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def joinpath(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __enter__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __exit__(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def stat(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def chmod(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def exists(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def glob(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_dir(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_file(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_symlink(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_socket(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_fifo(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_block_device(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_char_device(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def iterdir(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def lchmod(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def lstat(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def mkdir(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def open(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def readlink(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def rename(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def replace(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def resolve(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def rglob(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def rmdir(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def symlink_to(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def hardlink_to(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def touch(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def unlink(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def absolute(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def expanduser(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def read_bytes(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def read_text(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def samefile(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def write_bytes(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def write_text(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def link_to(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def walk(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def owner(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def group(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def is_mount(*args: object, **kwargs: object) -> NoReturn:
        """DO NOT USE THIS METHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @classmethod
    def home(cls, *a: object, **kwa: object) -> NoReturn:
        """DO NOT USE THIS CLASSMETHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    @classmethod
    def cwd(cls, *a: object, **kwa: object) -> NoReturn:
        """DO NOT USE THIS CLASSMETHOD. THIS IS NOT A MEMBER OF `Rule` BUT OF `FakePath`"""
        raise NotImplementedError("You may not use this member")

    def __hash__(self) -> int:
        return hash(id(self))
