from collections.abc import Mapping
from typing import TypeVar, Iterator

K = TypeVar("K")
V = TypeVar("V")

class FrozenDict(Mapping[K, V]):
    def __init__(self, dic: Mapping[K, V]): ...
    def __getitem__(self, key: K) -> V: ...
    def __iter__(self) -> Iterator[K]: ...
    def __len__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __getattr__(self, key: str) -> V: ...
